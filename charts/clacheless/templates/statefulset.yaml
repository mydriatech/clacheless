apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clacheless
  labels:
    app.kubernetes.io/name: clacheless
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: clacheless
      app.kubernetes.io/instance: "{{ .Release.Name }}"
  # Roll out new versions with delay to allow state transfers between old and
  # new Pods.
  minReadySeconds: 5
  serviceName: clacheless-intra
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 16 | quote }}
        kubectl.kubernetes.io/default-container: "{{ .Chart.Name }}"
      labels:
        app.kubernetes.io/name: clacheless
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      #serviceAccountName: clacheless
      affinity:
        # Avoid scheduling Pods on the same node if possible.
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: clacheless
              topologyKey: "kubernetes.io/hostname"
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 10001
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
            - name: intra
              containerPort: 9000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
              # Defaults:
              #periodSeconds: 10
              #failureThreshold: 3
              #initialDelaySeconds: 0
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
          # Reach ready state fast. See also minReadySeconds comment above.
          startupProbe:
            httpGet:
              path: /health/ready
              port: http
            failureThreshold: 120
            periodSeconds: 1
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: CLACHELESS_ADDR_TEMPLATE
              value: {{ print "clacheless-ORDINAL." "clacheless-intra." .Release.Namespace ".svc:9000"}}
            - name: CLACHELESS_TTL
              value: "{{ .Values.clacheless.ttl }}"
            - name: LOG_LEVEL
              {{- if .Values.clacheless.debug }}
              value: "DEBUG"
              {{- else }}
              value: "INFO"
              {{- end }}
          volumeMounts:
          - name: dc-secret
            mountPath: "/secrets/dc"
            readOnly: true
      volumes:
        - name: dc-secret
          secret:
            secretName: clacheless-dc
            items:
            - key: current
              path: key
